name: Build Changed Services and Publish Docker Images
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  SERVICES: config-server auth-service transaction-service complain-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Verify Docker login
        run: |
          echo "Docker login status:"
          docker info | grep -i username || echo "No username found in docker info"
          echo "DockerHub username: $DOCKERHUB_USERNAME"

      - name: Detect changed services
        id: changed-services
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          CHANGED_SERVICES=""
          for SERVICE in $SERVICES; do
            if echo "$CHANGED_FILES" | grep -q "backend/$SERVICE/"; then
              CHANGED_SERVICES="$CHANGED_SERVICES $SERVICE"
            fi
          done
          
          CHANGED_SERVICES=$(echo $CHANGED_SERVICES | xargs)
          echo "Changed services: $CHANGED_SERVICES"
          echo "services=$CHANGED_SERVICES" >> $GITHUB_OUTPUT

      - name: Build and push changed services
        if: steps.changed-services.outputs.services != ''
        run: |
          echo "Services to build: ${{ steps.changed-services.outputs.services }}"
          for SERVICE in ${{ steps.changed-services.outputs.services }}; do
            echo "=== Building $SERVICE ==="
            
            # Check if service directory exists
            if [ ! -d "backend/$SERVICE" ]; then
              echo "ERROR: Directory backend/$SERVICE not found!"
              continue
            fi
            
            # Build Docker image with verbose output
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "Building Docker image for $SERVICE..."
            echo "Command: docker build --build-arg SERVICE_NAME=$SERVICE -f Dockerfile.backend -t $DOCKERHUB_USERNAME/$SERVICE:latest -t $DOCKERHUB_USERNAME/$SERVICE:$SHORT_SHA ."
            
            docker build \
              --build-arg SERVICE_NAME=$SERVICE \
              -f Dockerfile.backend \
              -t $DOCKERHUB_USERNAME/$SERVICE:latest \
              -t $DOCKERHUB_USERNAME/$SERVICE:$SHORT_SHA \
              . || { echo "Docker build failed for $SERVICE"; exit 1; }
            
            echo "Pushing $SERVICE to Docker Hub..."
            docker push $DOCKERHUB_USERNAME/$SERVICE:latest || { echo "Push failed for $SERVICE:latest"; exit 1; }
            docker push $DOCKERHUB_USERNAME/$SERVICE:$SHORT_SHA || { echo "Push failed for $SERVICE:$SHORT_SHA"; exit 1; }
            
            echo "=== Successfully completed $SERVICE ==="
          done

      - name: No changes detected
        if: steps.changed-services.outputs.services == ''
        run: echo "âœ… No changes detected. Skipping build."