name: Build Changed Services and Publish Docker Images
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  SERVICES: config-server auth-service transaction-service complain-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Detect changed services
        id: changed-services
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          CHANGED_SERVICES=""
          for SERVICE in $SERVICES; do
            if echo "$CHANGED_FILES" | grep -q "backend/$SERVICE/"; then
              CHANGED_SERVICES="$CHANGED_SERVICES $SERVICE"
            fi
          done
          
          CHANGED_SERVICES=$(echo $CHANGED_SERVICES | xargs)
          echo "Changed services: $CHANGED_SERVICES"
          echo "services=$CHANGED_SERVICES" >> $GITHUB_OUTPUT

      - name: Build and push changed services
        if: steps.changed-services.outputs.services != ''
        run: |
          for SERVICE in ${{ steps.changed-services.outputs.services }}; do
            echo "=== Building $SERVICE ==="
            
            # Build JAR
            cd backend/$SERVICE
            mvn clean package -DskipTests
            cd ../../
            
            # Copy JAR file
            JAR_FILE=$(find backend/$SERVICE/target -name "*.jar" ! -name "*-original.jar")
            cp "$JAR_FILE" "$SERVICE.jar"
            
            # Build and push Docker image (Docker sẽ tự tìm Dockerfile)
            SHORT_SHA=$(git rev-parse --short HEAD)
            docker build \
              --build-arg JAR_FILE=$SERVICE.jar \
              -t $DOCKERHUB_USERNAME/$SERVICE:latest \
              -t $DOCKERHUB_USERNAME/$SERVICE:$SHORT_SHA \
              .
            
            docker push $DOCKERHUB_USERNAME/$SERVICE:latest
            docker push $DOCKERHUB_USERNAME/$SERVICE:$SHORT_SHA
            
            # Cleanup
            rm -f "$SERVICE.jar"
            echo "=== Completed $SERVICE ==="
          done

      - name: No changes detected
        if: steps.changed-services.outputs.services == ''
        run: echo "✅ No changes detected. Skipping build."